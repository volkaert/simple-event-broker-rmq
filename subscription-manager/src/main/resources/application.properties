# see https://www.baeldung.com/spring-profiles
spring.profiles.active=@spring.profiles.active@

# Application name and instance id of this component/module
spring.application.name = ${COMPONENT_NAME:subscription-manager}
spring.application.instance_id = ${COMPONENT_INSTANCE_ID:${spring.application.name}-${CLUSTER_NODE_INDEX:0}}

# Telemetry
broker.telemetry.component-name = ${spring.application.name}
broker.telemetry.component-instance-id = ${spring.application.instance_id}

# Logging
logging.level.fr.volkaert = DEBUG
logging.file.path = ./logs/${broker.telemetry.component-instance-id}
logging.file.name = ${broker.telemetry.component-instance-id}.log
logging.logback.rollingpolicy.file-name-pattern = %d{yyyy-MM-dd}.%i.${broker.telemetry.component-instance-id}.log
logging.logback.rollingpolicy.max-file-size = 10MB
logging.logback.rollingpolicy.max-history = 30
logging.logback.rollingpolicy.total-size-cap = 10GB
logging.logback.rollingpolicy.clean-history-on-start = false

# Timeouts to connect and read the webhooks
broker.connect-timeout-in-seconds-for-subscription-adapter = 2
# Pay attention: the broker.read-timeout-in-seconds-for-subscription-adapter must LONGER than the broker.read-timeout-in-seconds-for-webhooks of the Subscription Adapter module
broker.read-timeout-in-seconds-for-subscription-adapter = 35

# Time to live for webhook errors
broker.default-time-to-live-in-seconds-for-webhook-connection-error = 864000
broker.default-time-to-live-in-seconds-for-webhook-read-timeout-error = 864000
broker.default-time-to-live-in-seconds-for-webhook-server5xx-error = 60
broker.default-time-to-live-in-seconds-for-webhook-client4xx-error = 60
broker.default-time-to-live-in-seconds-for-webhook-auth401or403-error = 60

# Time to live for DeadLetterQueues
# TTL set during queue declaration so cannot be changed afterwards
broker.time-to-live-in-seconds-for-dead-letter-queues = 86400
# TTL set at the message level so can be changed independently of the timeToLiveInSecondsForDeadLetterQueues
broker.time-to-live-in-seconds-for-dead-letter-messages = 86400

# Is event processing active ? Should be true on the primary datacenter and false on the backup datacenter (to avoid duplicate deliveries)
broker.event-processing-active = true

# Actuator endpoints
management.endpoints.enabled-by-default = false
management.endpoint.health.enabled = true
management.endpoint.metrics.enabled = true
management.endpoint.prometheus.enabled = true
management.endpoint.logfile.enabled = true
management.endpoints.web.exposure.include = health, metrics, prometheus, logfile

# Graceful Shutdown (requires Spring Boot >= 2.3.x)
server.shutdown = graceful
spring.lifecycle.timeout-per-shutdown-phase = 5s

