logging.level.fr.volkaert = DEBUG

# Server port, application name and instance id of this component/module
server.port = 8082
#server.port = ${PORT:0}
spring.application.name = PublicationManager
spring.application.instance_id = ${INSTANCE_ID:${random.value}}

# RabbitMQ
broker.rabbitmq-host = localhost
broker.rabbitmq-port = 5672
broker.rabbitmq-username = guest
broker.rabbitmq-password = guest

# RabbitMQ for Mirroring/Backup/HA/DisasterRecovery...
broker.mirroring-active = false
#broker.rabbitmq-host-for-mirroring = localhost
#broker.rabbitmq-port-for-mirroring = 5672
#broker.rabbitmq-username-for-mirroring = guest
#broker.rabbitmq-password-for-mirroring = guest

# Credentials to call this component/module (typically used by the Publication Adapter)
broker.auth-client-id = some-client-id-for-publication-manager
# the following secret has been encoded using https://www.devglan.com/online-tools/bcrypt-hash-generator
broker.auth-client-secret = $2a$04$9aDJsRh.nBf4keWmzVSyFu.qe3zYltMgN2Db.bkaBum3oZuI5dL.m

# URL and credentials to call the CatalogAdapter
broker.catalog-adapter-url = http://localhost:8085
#broker.catalog-adapter-url = lb://CatalogAdapter
broker.auth-client-id-for-catalog-adapter = some-client-id-for-catalog
broker.auth-client-secret-for-catalog-adapter = some-client-secret-for-catalog

# Default time to live for an event is 10 days (10*24*60*60)
broker.default-time-to-live-in-seconds = 864000

# Max time to live for an event is 10 days (10*24*60*60)
broker.max-time-to-live-in-seconds = 864000

# Eureka Service Discovery
eureka.client.enabled = false
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka/
#eureka.client.healthcheck.enabled = true
eureka.client.registryFetchIntervalSeconds = 10
eureka.client.initialInstanceInfoReplicationIntervalSeconds = 30
eureka.client.instanceInfoReplicationIntervalSeconds = 10
eureka.instance.instance-id = ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id}
eureka.instance.leaseRenewalIntervalInSeconds = 5
eureka.instance.leaseExpirationDurationInSeconds = 10
spring.cloud.loadbalancer.ribbon.enabled = false

# Actuator endpoints (including liveness et readiness probes)
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details = always
management.endpoint.health.show-components = always
management.health.probes.enabled = true
management.endpoint.health.group.liveness.include = livenessState,publicationManagerLiveness
management.endpoint.health.group.readiness.include = readinessState,publicationManagerReadiness
#management.endpoint.health.roles = PROBES

# Useful for metrics (to group them by component type)
broker.component-type-name = ${spring.application.name}
# Useful for metrics (to distinguish instances of the same component type)
broker.component-instance-id = ${spring.application.instance_id}

# Graceful Shutdown (requires Spring Boot >= 2.3.x)
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=5s

