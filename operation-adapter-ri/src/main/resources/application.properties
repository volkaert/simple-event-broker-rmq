logging.level.fr.volkaert = DEBUG

# Server port, application name and instance id of this component/module
server.port = ${PORT:0}
spring.application.name = OperationAdapter
spring.application.instance_id = ${INSTANCE_ID:${random.value}}

# URL and credentials to call the CatalogAdapter
broker.catalog-adapter-url = lb://CatalogAdapter
broker.auth-client-id-for-catalog-adapter = some-client-id-for-catalog
broker.auth-client-secret-for-catalog-adapter = some-client-secret-for-catalog

# URL and credentials to call the Operation Manager
broker.operation-manager-url = lb://OperationManager
broker.auth-client-id-for-operation-manager = some-client-id-for-operation-manager
broker.auth-client-secret-for-operation-manager = some-client-secret-for-operation-manager

# Timeouts to connect to OperationManager and read from OperationManager
broker.connect-timeout-in-seconds-for-operation-manager = 2
broker.read-timeout-in-seconds-for-operation-manager = 10

# Eureka Service Discovery
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka/
#eureka.client.healthcheck.enabled = true
eureka.client.registryFetchIntervalSeconds = 10
eureka.client.initialInstanceInfoReplicationIntervalSeconds = 30
eureka.client.instanceInfoReplicationIntervalSeconds = 10
eureka.instance.instance-id = ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id}
eureka.instance.leaseRenewalIntervalInSeconds = 5
eureka.instance.leaseExpirationDurationInSeconds = 10
spring.cloud.loadbalancer.ribbon.enabled = false

# Actuator endpoints (including liveness et readiness probes)
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details = always
management.endpoint.health.show-components = always
management.health.probes.enabled = true
management.endpoint.health.group.liveness.include = livenessState,operationAdapterLiveness
management.endpoint.health.group.readiness.include = readinessState,operationAdapterReadiness
#management.endpoint.health.roles = PROBES

# Useful for metrics (to group them by component type)
broker.component-type-name = ${spring.application.name}
# Useful for metrics (to distinguish instances of the same component type)
broker.component-instance-id = ${spring.application.instance_id}

# Graceful Shutdown (requires Spring Boot >= 2.3.x)
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=5s
