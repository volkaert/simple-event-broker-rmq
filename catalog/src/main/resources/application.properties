# If stdlogs profile active: standard logs in the console. If jsonlogs profile active: JSON logs in the console and in rolling files
spring.profiles.active = stdlogs

# Server port, application name and instance id of this component/module
server.port = ${PORT:8086}
spring.application.name = ${COMPONENT_NAME:Catalog}
spring.application.instance_id = ${COMPONENT_INSTANCE_ID:${spring.application.name}-${CLUSTER_INDEX:0}}

# Telemetry
broker.telemetry.component-name = ${spring.application.name}
broker.telemetry.component-instance-id = ${spring.application.instance_id}

# Logging
logging.level.fr.volkaert = DEBUG
# For logging.file.name, you must provide only a filename and not a path+filename because of the config in logback-spring.xml
logging.file.name = ${broker.telemetry.component-instance-id}.log

# Database config
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=sa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.datasource.url=jdbc:h2:file:/data/catalog
#spring.jpa.generate-ddl=true

# H2 console will be accessible at http://localhost:{server.port}/h2-console
spring.h2.console.enabled=true

# Credentials to call this component/module
broker.auth-client-id = some-client-id-for-catalog
# the following secret has been encoded using https://www.devglan.com/online-tools/bcrypt-hash-generator
broker.auth-client-secret = $2a$04$yDBdUN7Pi39qXev1v90LFeiTND0EsflnYuNqESvDXAGlUq.brsjTG

# URL and credentials to call the CatalogAdapter
broker.catalog-adapter-url = http://localhost:8085
#broker.catalog-adapter-url = lb://CatalogAdapter
broker.auth-client-id-for-catalog-adapter = some-client-id-for-catalog
broker.auth-client-secret-for-catalog-adapter = some-client-secret-for-catalog

# Eureka Service Discovery
eureka.client.enabled = false
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka/
#eureka.client.healthcheck.enabled = true
eureka.client.registryFetchIntervalSeconds = 10
eureka.client.initialInstanceInfoReplicationIntervalSeconds = 30
eureka.client.instanceInfoReplicationIntervalSeconds = 10
eureka.instance.instance-id = ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id}
eureka.instance.leaseRenewalIntervalInSeconds = 5
eureka.instance.leaseExpirationDurationInSeconds = 10
spring.cloud.loadbalancer.ribbon.enabled = false

# Actuator endpoints (including liveness et readiness probes)
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details = always
management.endpoint.health.show-components = always
management.health.probes.enabled = true
management.endpoint.health.group.liveness.include = livenessState,catalogLiveness
management.endpoint.health.group.readiness.include = readinessState,catalogReadiness
#management.endpoint.health.roles = PROBES

# Graceful Shutdown (requires Spring Boot >= 2.3.x)
server.shutdown = graceful
spring.lifecycle.timeout-per-shutdown-phase = 5s
