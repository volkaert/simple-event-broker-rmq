# see https://www.baeldung.com/spring-profiles
spring.profiles.active=@spring.profiles.active@

# Application name and instance id of this component/module
spring.application.name = ${COMPONENT_NAME:SubscriptionAdapter}
spring.application.instance_id = ${COMPONENT_INSTANCE_ID:${spring.application.name}-${CLUSTER_NODE_INDEX:0}}

# Telemetry
broker.telemetry.component-name = ${spring.application.name}
broker.telemetry.component-instance-id = ${spring.application.instance_id}

# Logging
logging.level.fr.volkaert = DEBUG
logging.file.path = ./logs/${broker.telemetry.component-instance-id}
logging.file.name = ${broker.telemetry.component-instance-id}.log
logging.logback.rollingpolicy.file-name-pattern = %d{yyyy-MM-dd}.%i.${broker.telemetry.component-instance-id}.log
logging.logback.rollingpolicy.max-file-size = 10MB
logging.logback.rollingpolicy.max-history = 30
logging.logback.rollingpolicy.total-size-cap = 10GB
logging.logback.rollingpolicy.clean-history-on-start = false

# Timeouts to connect and read the webhooks
broker.connect-timeout-in-seconds-for-webhooks = 2
# Pay attention: the broker.read-timeout-in-seconds-for-webhooks must SHORTER than the broker.read-timeout-in-seconds-for-subscription-adapter of the Subscription Manager module
broker.read-timeout-in-seconds-for-webhooks = 30

# Eureka Service Discovery
eureka.client.enabled = false
eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka/
#eureka.client.healthcheck.enabled = true
eureka.client.registryFetchIntervalSeconds = 10
eureka.client.initialInstanceInfoReplicationIntervalSeconds = 30
eureka.client.instanceInfoReplicationIntervalSeconds = 10
eureka.instance.instance-id = ${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id}
eureka.instance.leaseRenewalIntervalInSeconds = 5
eureka.instance.leaseExpirationDurationInSeconds = 10
spring.cloud.loadbalancer.ribbon.enabled = false

# Actuator endpoints (including liveness et readiness probes)
management.endpoints.web.exposure.include = *
management.endpoint.health.show-details = always
management.endpoint.health.show-components = always
#management.health.probes.enabled = true
#management.endpoint.health.group.liveness.include = livenessState,subscriptionAdapterLiveness
#management.endpoint.health.group.readiness.include = readinessState,subscriptionAdapterReadiness
#management.endpoint.health.roles = PROBES

# Graceful Shutdown (requires Spring Boot >= 2.3.x)
server.shutdown = graceful
spring.lifecycle.timeout-per-shutdown-phase = 5s


